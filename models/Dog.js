const mongoose = require('mongoose');

const DogSchema = mongoose.Schema({
  name: { type: String, required: true, unique: true },
  sex: String,
  group: String,
  birthday: Date,
  status: String,
  tags: [String],
  color: [String],
  breed: [String],
  weight: Number,
  entryCreatedOn: { type: Date, default: Date.now },
  intakeDate: Date,
  initialDateWCurrentFoster: Date,
  origin: String,
  fee: Number,
  history: String,
  currentLocation: String,
  bio: String,
  vettingStatus: String,
  vettingDates: {
    wellness: Date,
    flea: Date,
    dewormer: Date,
    dhpp1: Date,
    dhpp2: Date,
    dhlpp3: Date,
    bordetella: Date,
    rabies: Date,
    microchip: Date,
    fixed: Date
  },
  medical : {
    primaryVet: String,
    allVetsUsed: [String],
    tvt: Boolean,
    fourDX: Boolean,
    fleaMedBrand: String,
    altDiseaseNotes: String,
    upcomingVetAppts: String,
    medNotes: String,
  },
  isFixed: Boolean,
  notes: String,
  needsFoster: Boolean,
  parents: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Dog' }],
  siblings: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Dog' }],
  children: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Dog' }],
  currentFoster: { type: mongoose.Schema.Types.ObjectID, ref: 'Person' },
  prevFoster: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Person' }],
  adopter: { type: mongoose.Schema.Types.ObjectID, ref: 'Person' },
  applicants: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Person' }],
  vettingCoordinator: { type: mongoose.Schema.Types.ObjectID, ref: 'Person' },
  fosterCoordinator: { type: mongoose.Schema.Types.ObjectID, ref: 'Person' },
  adoptionCoordinator: { type: mongoose.Schema.Types.ObjectID, ref: 'Person' },
});

module.exports = mongoose.model('Dog', DogSchema);
